global max = read from stdin
global C[n] = list of initial costs

C[n] = remove multiples of 5

S(i,j,d)
   # Base case 0
   if 
   # Base case 1
   if i == j
      return round(S[i]) 
   # Base case 2 
   if i == j - 1
      return max(sum a, sum b) # we either add the dividor or not
   # Base case 3
   if d >= max
      return round(sum of elements from C[i] to C[j])
   # Recursive case
   max = 0
   for k in range(i,j)
      if k == j
         val = round(everything from i to j) 
      else
		  val = S(i,k,d++) + S(k+1,j,d++)
	  if val > max
			 max = val
   return max 
  
   
